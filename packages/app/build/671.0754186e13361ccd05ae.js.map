{"version":3,"file":"671.0754186e13361ccd05ae.js","mappings":"8rBACkF,IAAAA,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAE3E,MAAME,EAIXC,YAAYC,GAAcC,EAAA,KAAAN,EAAA,CAAAO,UAAA,EAAAC,WAAA,IAAAF,EAAA,KAAAJ,EAAA,CAAAK,UAAA,EAAAC,WAAA,IACxBC,EAAAC,KAAIV,EAASK,EACf,CAEAM,eACE,OAAO,CACT,CAEAC,UACE,YAAwBC,IAAjBC,EAAAJ,KAAIR,EACb,CAEAa,gBACE,IAAID,EAACJ,KAAIR,GACP,MAAM,IAAIc,EAAAA,GAAYC,EAAAA,GAAAA,aAA8B,0BAEtD,MAAO,CACLC,WAAY,OACZC,MAAO,gBAAeL,EAAGJ,KAAIV,GAEjC,CAEAe,cACE,MAAMK,EAAI,IAAIC,EAAAA,UAASP,EAACJ,KAAIV,IACtBsB,QAAaF,EAAEG,UAErB,OADAd,EAAAC,KAAIR,EAAW,IAAIsB,EAAAA,YAAeF,EAAMF,KACjC,CACT,CAEAK,QACE,OAAOC,QAAQC,SAAQ,EACzB,CAEAC,aACE,MAAM,IAAIC,MAAM,0BAClB,CACAC,gBACE,MAAM,IAAID,MAAM,0BAClB,CACAE,aACE,MAAM,IAAIF,MAAM,0BAClB,CACAG,cACE,OAAON,QAAQC,QAAQ,GACzB,E","sources":["webpack://@snort/app/./src/Wallet/Cashu.ts"],"sourcesContent":["import { LNWallet, Sats, WalletError, WalletErrorCode, WalletInfo, WalletInvoice } from \"Wallet\";\nimport { CashuMint, CashuWallet as TheCashuWallet, Proof } from \"@cashu/cashu-ts\";\n\nexport class CashuWallet implements LNWallet {\n  #mint: string;\n  #wallet?: TheCashuWallet;\n\n  constructor(mint: string) {\n    this.#mint = mint;\n  }\n\n  canAutoLogin(): boolean {\n    return true;\n  }\n\n  isReady(): boolean {\n    return this.#wallet !== undefined;\n  }\n\n  async getInfo(): Promise<WalletInfo> {\n    if (!this.#wallet) {\n      throw new WalletError(WalletErrorCode.GeneralError, \"Wallet not initialized\");\n    }\n    return {\n      nodePubKey: \"asdd\",\n      alias: \"Cashu  mint: \" + this.#mint,\n    } as WalletInfo;\n  }\n\n  async login(): Promise<boolean> {\n    const m = new CashuMint(this.#mint);\n    const keys = await m.getKeys();\n    this.#wallet = new TheCashuWallet(keys, m);\n    return true;\n  }\n\n  close(): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n\n  getBalance(): Promise<Sats> {\n    throw new Error(\"Method not implemented.\");\n  }\n  createInvoice(): Promise<WalletInvoice> {\n    throw new Error(\"Method not implemented.\");\n  }\n  payInvoice(): Promise<WalletInvoice> {\n    throw new Error(\"Method not implemented.\");\n  }\n  getInvoices(): Promise<WalletInvoice[]> {\n    return Promise.resolve([]);\n  }\n}\n\nexport interface NutStashBackup {\n  proofs: Array<Proof>;\n  mints: [\n    {\n      mintURL: string;\n    }\n  ];\n}\n"],"names":["_mint","WeakMap","_wallet","CashuWallet","constructor","mint","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","this","canAutoLogin","isReady","undefined","_classPrivateFieldGet","async","WalletError","WalletErrorCode","nodePubKey","alias","m","CashuMint","keys","getKeys","TheCashuWallet","close","Promise","resolve","getBalance","Error","createInvoice","payInvoice","getInvoices"],"sourceRoot":""}