{"version":3,"file":"pow.js","mappings":"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","sources":["webpack://@snort/app/../../.yarn/cache/@noble-hashes-npm-1.3.1-64a92c8445-7fdefc0f7a.zip/node_modules/@noble/hashes/src/_assert.ts","webpack://@snort/app/../../.yarn/cache/@noble-hashes-npm-1.3.1-64a92c8445-7fdefc0f7a.zip/node_modules/@noble/hashes/src/_sha2.ts","webpack://@snort/app/../../.yarn/cache/@noble-hashes-npm-1.3.1-64a92c8445-7fdefc0f7a.zip/node_modules/@noble/hashes/src/crypto.ts","webpack://@snort/app/../../.yarn/cache/@noble-hashes-npm-1.3.1-64a92c8445-7fdefc0f7a.zip/node_modules/@noble/hashes/src/sha256.ts","webpack://@snort/app/../../.yarn/cache/@noble-hashes-npm-1.3.1-64a92c8445-7fdefc0f7a.zip/node_modules/@noble/hashes/src/utils.ts","webpack://@snort/app/../system/src/pow-util.ts","webpack://@snort/app/webpack/bootstrap","webpack://@snort/app/../system/src/pow-worker.ts"],"sourcesContent":["export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\n\nexport interface NostrPowEvent {\n  id: string;\n  pubkey: string;\n  created_at: number;\n  kind: number;\n  tags: Array<Array<string>>;\n  content: string;\n  sig: string;\n}\n\nexport function minePow(e: NostrPowEvent, target: number) {\n  let ctr = 0;\n\n  let nonceTagIdx = e.tags.findIndex(a => a[0] === \"nonce\");\n  if (nonceTagIdx === -1) {\n    nonceTagIdx = e.tags.length;\n    e.tags.push([\"nonce\", ctr.toString(), target.toString()]);\n  }\n  do {\n    //roll ctr and compute id\n    const now = Math.floor(new Date().getTime() / 1000);\n    // reset ctr if timestamp changed, this is not really needed but makes the ctr value smaller\n    if (now !== e.created_at) {\n      ctr = 0;\n      e.created_at = now;\n    }\n    e.tags[nonceTagIdx][1] = (++ctr).toString();\n\n    e.id = createId(e);\n  } while (countLeadingZeros(e.id) < target);\n\n  return e;\n}\n\nfunction createId(e: NostrPowEvent) {\n  const payload = [0, e.pubkey, e.created_at, e.kind, e.tags, e.content];\n  return bytesToHex(sha256(JSON.stringify(payload)));\n}\n\nexport function countLeadingZeros(hex: string) {\n  let count = 0;\n\n  for (let i = 0; i < hex.length; i++) {\n    const nibble = parseInt(hex[i], 16);\n    if (nibble === 0) {\n      count += 4;\n    } else {\n      count += Math.clz32(nibble) - 28;\n      break;\n    }\n  }\n\n  return count;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/// <reference lib=\"webworker\" />\n\nimport { minePow, NostrPowEvent } from \"./pow-util\";\n\nexport interface PowWorkerMessage {\n  id: string;\n  cmd: \"req\" | \"rsp\";\n  event: NostrPowEvent;\n  target: number;\n}\n\nglobalThis.onmessage = ev => {\n  const data = ev.data as PowWorkerMessage;\n  if (data.cmd === \"req\") {\n    queueMicrotask(() => {\n      minePow(data.event, data.target);\n      data.cmd = \"rsp\";\n      globalThis.postMessage(data);\n    });\n  }\n};\n"],"names":["number","n","Number","isSafeInteger","Error","bool","b","bytes","lengths","Uint8Array","length","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","assert","SHA2","Hash","constructor","padOffset","isLE","super","pos","this","buffer","view","createView","update","data","len","toBytes","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","crypto","globalThis","undefined","Maj","a","c","SHA256_K","Uint32Array","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","sha256","wrapConstructor","sha224","u8a","u8","arr","byteLength","u32","floor","DataView","word","shift","hexes","Array","from","v","toString","padStart","utf8ToBytes","str","TextEncoder","encode","hex","array","j","hexByte","byte","parseInt","isNaN","nextTick","async","iters","tick","cb","ts","Date","now","diff","arrays","r","reduce","sum","pad","forEach","clone","defaults","opts","obj","Object","prototype","call","assign","hashCons","hashC","msg","tmp","bytesLength","getRandomValues","createId","e","payload","pubkey","created_at","kind","tags","content","bytesToHex","JSON","stringify","countLeadingZeros","count","nibble","clz32","target","ctr","nonceTagIdx","findIndex","push","getTime","id","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","onmessage","ev","cmd","queueMicrotask","minePow","event","postMessage"],"sourceRoot":""}